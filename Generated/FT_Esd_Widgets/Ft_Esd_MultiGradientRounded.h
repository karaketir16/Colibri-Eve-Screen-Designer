/*
This file is automatically generated
DO NOT MODIFY BY HAND
Ft_Esd_MultiGradientRounded
Header
*/

#ifndef Ft_Esd_MultiGradientRounded__H
#define Ft_Esd_MultiGradientRounded__H

#include "Ft_Esd.h"
#include "Ft_Esd_Math.h"
#include "Ft_Esd_Widget.h"

#ifndef ESD_LOGIC
#define ESD_LOGIC(name, ...)
#define ESD_ACTOR(name, ...)
#define ESD_WIDGET(name, ...)
#define ESD_PAGE(name, ...)
#define ESD_APPLICATION(name, ...)
#define ESD_INPUT(name, ...)
#define ESD_OUTPUT(name, ...)
#define ESD_SLOT(name, ...)
#define ESD_SIGNAL(name, ...)
#define ESD_VARIABLE(name, ...)
#define ESD_WRITER(name, ...)
#endif

#define Ft_Esd_MultiGradientRounded_CLASSID 0x85D4C87E
ESD_SYMBOL(Ft_Esd_MultiGradientRounded_CLASSID, Type = esd_classid_t)

ESD_WIDGET(Ft_Esd_MultiGradientRounded, Include = "Ft_Esd_MultiGradientRounded.h", Callback, DisplayName = "ESD Multi Gradient (Rounded)", Category = EsdBasicWidegts, X = 0, Y = 0, Width = 400, Height = 300)
typedef struct
{
	union
	{
		void *Owner;
		Ft_Esd_Widget Widget;
	};
	ESD_VARIABLE(Alpha, Type = ft_uint8_t, Default = 255, Public)
	ft_uint8_t Alpha;
	ESD_VARIABLE(Radius, Type = ft_int32_f4_t, Min = 1, Default = 4, Public)
	ft_int32_f4_t Radius;
	ESD_VARIABLE(TopLeft, DisplayName = "Top Left", Type = ft_rgb32_t, Default = #ff0012, Public)
	ft_rgb32_t TopLeft;
	ESD_VARIABLE(TopRight, DisplayName = "Top Right", Type = ft_rgb32_t, Default = #31ff00, Public)
	ft_rgb32_t TopRight;
	ESD_VARIABLE(BottomLeft, DisplayName = "Bottom Left", Type = ft_rgb32_t, Default = #6700ff, Public)
	ft_rgb32_t BottomLeft;
	ESD_VARIABLE(BottomRight, DisplayName = "Bottom Right", Type = ft_rgb32_t, Default = #00d1ff, Public)
	ft_rgb32_t BottomRight;
} Ft_Esd_MultiGradientRounded;

void Ft_Esd_MultiGradientRounded__Initializer(Ft_Esd_MultiGradientRounded *context);

ESD_SLOT(Render)
void Ft_Esd_MultiGradientRounded_Render(Ft_Esd_MultiGradientRounded *context);

#endif /* Ft_Esd_MultiGradientRounded__H */

/* end of file */
